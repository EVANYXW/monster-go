// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: server/db.proto

package xsf_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 物品
type DB_ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DB_ItemInfo) Reset() {
	*x = DB_ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_ItemInfo) ProtoMessage() {}

func (x *DB_ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_ItemInfo.ProtoReflect.Descriptor instead.
func (*DB_ItemInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{0}
}

func (x *DB_ItemInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_ItemInfo) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DB_Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DB_ItemInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *DB_Items) Reset() {
	*x = DB_Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Items) ProtoMessage() {}

func (x *DB_Items) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Items.ProtoReflect.Descriptor instead.
func (*DB_Items) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{1}
}

func (x *DB_Items) GetInfos() []*DB_ItemInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// 角色
type DB_CharacterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Exp             uint32 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
	Level           uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	BreakLevel      uint32 `protobuf:"varint,4,opt,name=break_level,json=breakLevel,proto3" json:"break_level,omitempty"`
	AwakeLevel      uint32 `protobuf:"varint,5,opt,name=awake_level,json=awakeLevel,proto3" json:"awake_level,omitempty"`
	LikelyExp       uint32 `protobuf:"varint,6,opt,name=likely_exp,json=likelyExp,proto3" json:"likely_exp,omitempty"`
	LikelyLevel     uint32 `protobuf:"varint,7,opt,name=likely_level,json=likelyLevel,proto3" json:"likely_level,omitempty"`
	UltraSkillLevel uint32 `protobuf:"varint,8,opt,name=ultra_skill_level,json=ultraSkillLevel,proto3" json:"ultra_skill_level,omitempty"`
	SkinId          uint32 `protobuf:"varint,9,opt,name=skin_id,json=skinId,proto3" json:"skin_id,omitempty"`
}

func (x *DB_CharacterInfo) Reset() {
	*x = DB_CharacterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_CharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_CharacterInfo) ProtoMessage() {}

func (x *DB_CharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_CharacterInfo.ProtoReflect.Descriptor instead.
func (*DB_CharacterInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{2}
}

func (x *DB_CharacterInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_CharacterInfo) GetExp() uint32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *DB_CharacterInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *DB_CharacterInfo) GetBreakLevel() uint32 {
	if x != nil {
		return x.BreakLevel
	}
	return 0
}

func (x *DB_CharacterInfo) GetAwakeLevel() uint32 {
	if x != nil {
		return x.AwakeLevel
	}
	return 0
}

func (x *DB_CharacterInfo) GetLikelyExp() uint32 {
	if x != nil {
		return x.LikelyExp
	}
	return 0
}

func (x *DB_CharacterInfo) GetLikelyLevel() uint32 {
	if x != nil {
		return x.LikelyLevel
	}
	return 0
}

func (x *DB_CharacterInfo) GetUltraSkillLevel() uint32 {
	if x != nil {
		return x.UltraSkillLevel
	}
	return 0
}

func (x *DB_CharacterInfo) GetSkinId() uint32 {
	if x != nil {
		return x.SkinId
	}
	return 0
}

type DB_VehicleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Counts []uint32 `protobuf:"varint,2,rep,packed,name=counts,proto3" json:"counts,omitempty"`
}

func (x *DB_VehicleInfo) Reset() {
	*x = DB_VehicleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_VehicleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_VehicleInfo) ProtoMessage() {}

func (x *DB_VehicleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_VehicleInfo.ProtoReflect.Descriptor instead.
func (*DB_VehicleInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{3}
}

func (x *DB_VehicleInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_VehicleInfo) GetCounts() []uint32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

type DB_Characters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos    []*DB_CharacterInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	Vehicles []*DB_VehicleInfo   `protobuf:"bytes,2,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
}

func (x *DB_Characters) Reset() {
	*x = DB_Characters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Characters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Characters) ProtoMessage() {}

func (x *DB_Characters) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Characters.ProtoReflect.Descriptor instead.
func (*DB_Characters) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{4}
}

func (x *DB_Characters) GetInfos() []*DB_CharacterInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *DB_Characters) GetVehicles() []*DB_VehicleInfo {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

type DB_PvpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos    []*DB_CharacterInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	Vehicles []*DB_VehicleInfo   `protobuf:"bytes,2,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
	TeamData []byte              `protobuf:"bytes,3,opt,name=team_data,json=teamData,proto3" json:"team_data,omitempty"`
	Score    uint32              `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *DB_PvpData) Reset() {
	*x = DB_PvpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_PvpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_PvpData) ProtoMessage() {}

func (x *DB_PvpData) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_PvpData.ProtoReflect.Descriptor instead.
func (*DB_PvpData) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{5}
}

func (x *DB_PvpData) GetInfos() []*DB_CharacterInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *DB_PvpData) GetVehicles() []*DB_VehicleInfo {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

func (x *DB_PvpData) GetTeamData() []byte {
	if x != nil {
		return x.TeamData
	}
	return nil
}

func (x *DB_PvpData) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 逻辑数据
type DB_LogicUint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DB_LogicUint) Reset() {
	*x = DB_LogicUint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_LogicUint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_LogicUint) ProtoMessage() {}

func (x *DB_LogicUint) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_LogicUint.ProtoReflect.Descriptor instead.
func (*DB_LogicUint) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{6}
}

func (x *DB_LogicUint) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_LogicUint) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DB_LogicByte struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DB_LogicByte) Reset() {
	*x = DB_LogicByte{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_LogicByte) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_LogicByte) ProtoMessage() {}

func (x *DB_LogicByte) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_LogicByte.ProtoReflect.Descriptor instead.
func (*DB_LogicByte) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{7}
}

func (x *DB_LogicByte) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_LogicByte) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type DB_Logics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counts []*DB_LogicUint `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty"`
	Bytes  []*DB_LogicByte `protobuf:"bytes,2,rep,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *DB_Logics) Reset() {
	*x = DB_Logics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Logics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Logics) ProtoMessage() {}

func (x *DB_Logics) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Logics.ProtoReflect.Descriptor instead.
func (*DB_Logics) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{8}
}

func (x *DB_Logics) GetCounts() []*DB_LogicUint {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *DB_Logics) GetBytes() []*DB_LogicByte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type DB_TaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status uint32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DB_TaskInfo) Reset() {
	*x = DB_TaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_TaskInfo) ProtoMessage() {}

func (x *DB_TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_TaskInfo.ProtoReflect.Descriptor instead.
func (*DB_TaskInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{9}
}

func (x *DB_TaskInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_TaskInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DB_TaskCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DB_TaskCount) Reset() {
	*x = DB_TaskCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_TaskCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_TaskCount) ProtoMessage() {}

func (x *DB_TaskCount) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_TaskCount.ProtoReflect.Descriptor instead.
func (*DB_TaskCount) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{10}
}

func (x *DB_TaskCount) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_TaskCount) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DB_Tasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos  []*DB_TaskInfo  `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	Counts []*DB_TaskCount `protobuf:"bytes,2,rep,name=counts,proto3" json:"counts,omitempty"`
}

func (x *DB_Tasks) Reset() {
	*x = DB_Tasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Tasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Tasks) ProtoMessage() {}

func (x *DB_Tasks) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Tasks.ProtoReflect.Descriptor instead.
func (*DB_Tasks) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{11}
}

func (x *DB_Tasks) GetInfos() []*DB_TaskInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *DB_Tasks) GetCounts() []*DB_TaskCount {
	if x != nil {
		return x.Counts
	}
	return nil
}

type DB_LevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Star     []uint32 `protobuf:"varint,2,rep,packed,name=star,proto3" json:"star,omitempty"`
	Group    uint32   `protobuf:"varint,3,opt,name=group,proto3" json:"group,omitempty"`
	IsPassed bool     `protobuf:"varint,4,opt,name=is_passed,json=isPassed,proto3" json:"is_passed,omitempty"` // 是否通关
}

func (x *DB_LevelInfo) Reset() {
	*x = DB_LevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_LevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_LevelInfo) ProtoMessage() {}

func (x *DB_LevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_LevelInfo.ProtoReflect.Descriptor instead.
func (*DB_LevelInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{12}
}

func (x *DB_LevelInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_LevelInfo) GetStar() []uint32 {
	if x != nil {
		return x.Star
	}
	return nil
}

func (x *DB_LevelInfo) GetGroup() uint32 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *DB_LevelInfo) GetIsPassed() bool {
	if x != nil {
		return x.IsPassed
	}
	return false
}

type DB_GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *DB_GroupInfo) Reset() {
	*x = DB_GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_GroupInfo) ProtoMessage() {}

func (x *DB_GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_GroupInfo.ProtoReflect.Descriptor instead.
func (*DB_GroupInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{13}
}

func (x *DB_GroupInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_GroupInfo) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type DB_Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos  []*DB_LevelInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	Groups []*DB_GroupInfo `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *DB_Level) Reset() {
	*x = DB_Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Level) ProtoMessage() {}

func (x *DB_Level) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Level.ProtoReflect.Descriptor instead.
func (*DB_Level) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{14}
}

func (x *DB_Level) GetInfos() []*DB_LevelInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *DB_Level) GetGroups() []*DB_GroupInfo {
	if x != nil {
		return x.Groups
	}
	return nil
}

type DB_RaffleHitCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RaffleCount    uint32 `protobuf:"varint,2,opt,name=raffle_count,json=raffleCount,proto3" json:"raffle_count,omitempty"`
	MaxRaffleCount uint32 `protobuf:"varint,3,opt,name=max_raffle_count,json=maxRaffleCount,proto3" json:"max_raffle_count,omitempty"`
	MaxHitCount    uint32 `protobuf:"varint,4,opt,name=max_hit_count,json=maxHitCount,proto3" json:"max_hit_count,omitempty"`
}

func (x *DB_RaffleHitCount) Reset() {
	*x = DB_RaffleHitCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_RaffleHitCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_RaffleHitCount) ProtoMessage() {}

func (x *DB_RaffleHitCount) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_RaffleHitCount.ProtoReflect.Descriptor instead.
func (*DB_RaffleHitCount) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{15}
}

func (x *DB_RaffleHitCount) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_RaffleHitCount) GetRaffleCount() uint32 {
	if x != nil {
		return x.RaffleCount
	}
	return 0
}

func (x *DB_RaffleHitCount) GetMaxRaffleCount() uint32 {
	if x != nil {
		return x.MaxRaffleCount
	}
	return 0
}

func (x *DB_RaffleHitCount) GetMaxHitCount() uint32 {
	if x != nil {
		return x.MaxHitCount
	}
	return 0
}

type DB_RaffleCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FreeCount uint32 `protobuf:"varint,2,opt,name=free_count,json=freeCount,proto3" json:"free_count,omitempty"`
	LimitTen  uint32 `protobuf:"varint,3,opt,name=limit_ten,json=limitTen,proto3" json:"limit_ten,omitempty"`
	LimitOne  uint32 `protobuf:"varint,4,opt,name=limit_one,json=limitOne,proto3" json:"limit_one,omitempty"`
}

func (x *DB_RaffleCount) Reset() {
	*x = DB_RaffleCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_RaffleCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_RaffleCount) ProtoMessage() {}

func (x *DB_RaffleCount) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_RaffleCount.ProtoReflect.Descriptor instead.
func (*DB_RaffleCount) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{16}
}

func (x *DB_RaffleCount) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_RaffleCount) GetFreeCount() uint32 {
	if x != nil {
		return x.FreeCount
	}
	return 0
}

func (x *DB_RaffleCount) GetLimitTen() uint32 {
	if x != nil {
		return x.LimitTen
	}
	return 0
}

func (x *DB_RaffleCount) GetLimitOne() uint32 {
	if x != nil {
		return x.LimitOne
	}
	return 0
}

type DB_Raffle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hcounts []*DB_RaffleHitCount `protobuf:"bytes,1,rep,name=hcounts,proto3" json:"hcounts,omitempty"`
	Rcounts []*DB_RaffleCount    `protobuf:"bytes,2,rep,name=rcounts,proto3" json:"rcounts,omitempty"`
}

func (x *DB_Raffle) Reset() {
	*x = DB_Raffle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Raffle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Raffle) ProtoMessage() {}

func (x *DB_Raffle) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Raffle.ProtoReflect.Descriptor instead.
func (*DB_Raffle) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{17}
}

func (x *DB_Raffle) GetHcounts() []*DB_RaffleHitCount {
	if x != nil {
		return x.Hcounts
	}
	return nil
}

func (x *DB_Raffle) GetRcounts() []*DB_RaffleCount {
	if x != nil {
		return x.Rcounts
	}
	return nil
}

type DB_TeamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon         uint32   `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	CharacterId  []uint32 `protobuf:"varint,4,rep,packed,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	VehicleId    uint32   `protobuf:"varint,5,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	PlayerSkills []uint32 `protobuf:"varint,6,rep,packed,name=player_skills,json=playerSkills,proto3" json:"player_skills,omitempty"`
}

func (x *DB_TeamInfo) Reset() {
	*x = DB_TeamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_TeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_TeamInfo) ProtoMessage() {}

func (x *DB_TeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_TeamInfo.ProtoReflect.Descriptor instead.
func (*DB_TeamInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{18}
}

func (x *DB_TeamInfo) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *DB_TeamInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DB_TeamInfo) GetIcon() uint32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *DB_TeamInfo) GetCharacterId() []uint32 {
	if x != nil {
		return x.CharacterId
	}
	return nil
}

func (x *DB_TeamInfo) GetVehicleId() uint32 {
	if x != nil {
		return x.VehicleId
	}
	return 0
}

func (x *DB_TeamInfo) GetPlayerSkills() []uint32 {
	if x != nil {
		return x.PlayerSkills
	}
	return nil
}

type DB_Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DB_TeamInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *DB_Team) Reset() {
	*x = DB_Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Team) ProtoMessage() {}

func (x *DB_Team) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Team.ProtoReflect.Descriptor instead.
func (*DB_Team) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{19}
}

func (x *DB_Team) GetInfos() []*DB_TeamInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type DB_ShopItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DB_ShopItem) Reset() {
	*x = DB_ShopItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_ShopItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_ShopItem) ProtoMessage() {}

func (x *DB_ShopItem) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_ShopItem.ProtoReflect.Descriptor instead.
func (*DB_ShopItem) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{20}
}

func (x *DB_ShopItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_ShopItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DB_ShopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Items []*DB_ShopItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DB_ShopInfo) Reset() {
	*x = DB_ShopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_ShopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_ShopInfo) ProtoMessage() {}

func (x *DB_ShopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_ShopInfo.ProtoReflect.Descriptor instead.
func (*DB_ShopInfo) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{21}
}

func (x *DB_ShopInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_ShopInfo) GetItems() []*DB_ShopItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DB_Shop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DB_ShopInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *DB_Shop) Reset() {
	*x = DB_Shop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Shop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Shop) ProtoMessage() {}

func (x *DB_Shop) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Shop.ProtoReflect.Descriptor instead.
func (*DB_Shop) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{22}
}

func (x *DB_Shop) GetInfos() []*DB_ShopInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type DB_SkillLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *DB_SkillLevel) Reset() {
	*x = DB_SkillLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_SkillLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_SkillLevel) ProtoMessage() {}

func (x *DB_SkillLevel) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_SkillLevel.ProtoReflect.Descriptor instead.
func (*DB_SkillLevel) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{23}
}

func (x *DB_SkillLevel) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_SkillLevel) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type DB_PlayerSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skills []*DB_SkillLevel `protobuf:"bytes,1,rep,name=skills,proto3" json:"skills,omitempty"`
}

func (x *DB_PlayerSkill) Reset() {
	*x = DB_PlayerSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_PlayerSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_PlayerSkill) ProtoMessage() {}

func (x *DB_PlayerSkill) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_PlayerSkill.ProtoReflect.Descriptor instead.
func (*DB_PlayerSkill) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{24}
}

func (x *DB_PlayerSkill) GetSkills() []*DB_SkillLevel {
	if x != nil {
		return x.Skills
	}
	return nil
}

type DB_PurchaseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DB_PurchaseData) Reset() {
	*x = DB_PurchaseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_PurchaseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_PurchaseData) ProtoMessage() {}

func (x *DB_PurchaseData) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_PurchaseData.ProtoReflect.Descriptor instead.
func (*DB_PurchaseData) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{25}
}

func (x *DB_PurchaseData) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DB_PurchaseData) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DB_Purchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string             `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Datas []*DB_PurchaseData `protobuf:"bytes,2,rep,name=datas,proto3" json:"datas,omitempty"`
	Tids  []string           `protobuf:"bytes,3,rep,name=tids,proto3" json:"tids,omitempty"`
}

func (x *DB_Purchase) Reset() {
	*x = DB_Purchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_db_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DB_Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DB_Purchase) ProtoMessage() {}

func (x *DB_Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_server_db_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DB_Purchase.ProtoReflect.Descriptor instead.
func (*DB_Purchase) Descriptor() ([]byte, []int) {
	return file_server_db_proto_rawDescGZIP(), []int{26}
}

func (x *DB_Purchase) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DB_Purchase) GetDatas() []*DB_PurchaseData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *DB_Purchase) GetTids() []string {
	if x != nil {
		return x.Tids
	}
	return nil
}

var File_server_db_proto protoreflect.FileDescriptor

var file_server_db_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x22, 0x33, 0x0a, 0x0b, 0x44, 0x42, 0x5f,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35,
	0x0a, 0x08, 0x44, 0x42, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x4c, 0x44, 0x5f,
	0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x10, 0x44, 0x42, 0x5f, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x77, 0x61, 0x6b, 0x65, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x77, 0x61, 0x6b, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x6c, 0x79,
	0x45, 0x78, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x6c, 0x79, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x6c,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x5f,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x44,
	0x42, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x73, 0x0a, 0x0d, 0x44, 0x42, 0x5f, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44,
	0x42, 0x5f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50,
	0x42, 0x2e, 0x44, 0x42, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x0a, 0x44,
	0x42, 0x5f, 0x50, 0x76, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50,
	0x42, 0x2e, 0x44, 0x42, 0x5f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4e, 0x4c,
	0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x34, 0x0a, 0x0c, 0x44, 0x42, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x55, 0x69, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x44, 0x42, 0x5f, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x42, 0x79, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x09,
	0x44, 0x42, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e, 0x4c, 0x44, 0x5f,
	0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x55, 0x69, 0x6e, 0x74, 0x52,
	0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e,
	0x44, 0x42, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x42, 0x79, 0x74, 0x65, 0x52, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0b, 0x44, 0x42, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x0c, 0x44, 0x42,
	0x5f, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x63, 0x0a, 0x08, 0x44, 0x42, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x4c,
	0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42,
	0x2e, 0x44, 0x42, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x65, 0x0a, 0x0c, 0x44, 0x42, 0x5f, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x0c,
	0x44, 0x42, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x64, 0x0a, 0x08, 0x44, 0x42, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e, 0x4c, 0x44,
	0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x44, 0x42, 0x5f,
	0x52, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x48, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x52, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x61, 0x78, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x48, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x79, 0x0a, 0x0e, 0x44, 0x42, 0x5f, 0x52, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x6e, 0x65, 0x22, 0x72, 0x0a, 0x09, 0x44, 0x42,
	0x5f, 0x52, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x68, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50,
	0x42, 0x2e, 0x44, 0x42, 0x5f, 0x52, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x48, 0x69, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x68, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x07,
	0x72, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x52, 0x61, 0x66, 0x66, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xb2,
	0x01, 0x0a, 0x0b, 0x44, 0x42, 0x5f, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x22, 0x34, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x29,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x44, 0x42, 0x5f,
	0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48,
	0x0a, 0x0b, 0x44, 0x42, 0x5f, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e,
	0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x34, 0x0a, 0x07, 0x44, 0x42, 0x5f, 0x53,
	0x68, 0x6f, 0x70, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x35,
	0x0a, 0x0d, 0x44, 0x42, 0x5f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x3f, 0x0a, 0x0e, 0x44, 0x42, 0x5f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42,
	0x2e, 0x44, 0x42, 0x5f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x06,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x37, 0x0a, 0x0f, 0x44, 0x42, 0x5f, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x64, 0x0a, 0x0b, 0x44, 0x42, 0x5f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x44, 0x42, 0x5f, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x64, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x62, 0x2f, 0x78, 0x73, 0x66, 0x5f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_db_proto_rawDescOnce sync.Once
	file_server_db_proto_rawDescData = file_server_db_proto_rawDesc
)

func file_server_db_proto_rawDescGZIP() []byte {
	file_server_db_proto_rawDescOnce.Do(func() {
		file_server_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_db_proto_rawDescData)
	})
	return file_server_db_proto_rawDescData
}

var file_server_db_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_server_db_proto_goTypes = []interface{}{
	(*DB_ItemInfo)(nil),       // 0: NLD_PB.DB_ItemInfo
	(*DB_Items)(nil),          // 1: NLD_PB.DB_Items
	(*DB_CharacterInfo)(nil),  // 2: NLD_PB.DB_CharacterInfo
	(*DB_VehicleInfo)(nil),    // 3: NLD_PB.DB_VehicleInfo
	(*DB_Characters)(nil),     // 4: NLD_PB.DB_Characters
	(*DB_PvpData)(nil),        // 5: NLD_PB.DB_PvpData
	(*DB_LogicUint)(nil),      // 6: NLD_PB.DB_LogicUint
	(*DB_LogicByte)(nil),      // 7: NLD_PB.DB_LogicByte
	(*DB_Logics)(nil),         // 8: NLD_PB.DB_Logics
	(*DB_TaskInfo)(nil),       // 9: NLD_PB.DB_TaskInfo
	(*DB_TaskCount)(nil),      // 10: NLD_PB.DB_TaskCount
	(*DB_Tasks)(nil),          // 11: NLD_PB.DB_Tasks
	(*DB_LevelInfo)(nil),      // 12: NLD_PB.DB_LevelInfo
	(*DB_GroupInfo)(nil),      // 13: NLD_PB.DB_GroupInfo
	(*DB_Level)(nil),          // 14: NLD_PB.DB_Level
	(*DB_RaffleHitCount)(nil), // 15: NLD_PB.DB_RaffleHitCount
	(*DB_RaffleCount)(nil),    // 16: NLD_PB.DB_RaffleCount
	(*DB_Raffle)(nil),         // 17: NLD_PB.DB_Raffle
	(*DB_TeamInfo)(nil),       // 18: NLD_PB.DB_TeamInfo
	(*DB_Team)(nil),           // 19: NLD_PB.DB_Team
	(*DB_ShopItem)(nil),       // 20: NLD_PB.DB_ShopItem
	(*DB_ShopInfo)(nil),       // 21: NLD_PB.DB_ShopInfo
	(*DB_Shop)(nil),           // 22: NLD_PB.DB_Shop
	(*DB_SkillLevel)(nil),     // 23: NLD_PB.DB_SkillLevel
	(*DB_PlayerSkill)(nil),    // 24: NLD_PB.DB_PlayerSkill
	(*DB_PurchaseData)(nil),   // 25: NLD_PB.DB_PurchaseData
	(*DB_Purchase)(nil),       // 26: NLD_PB.DB_Purchase
}
var file_server_db_proto_depIdxs = []int32{
	0,  // 0: NLD_PB.DB_Items.infos:type_name -> NLD_PB.DB_ItemInfo
	2,  // 1: NLD_PB.DB_Characters.infos:type_name -> NLD_PB.DB_CharacterInfo
	3,  // 2: NLD_PB.DB_Characters.vehicles:type_name -> NLD_PB.DB_VehicleInfo
	2,  // 3: NLD_PB.DB_PvpData.infos:type_name -> NLD_PB.DB_CharacterInfo
	3,  // 4: NLD_PB.DB_PvpData.vehicles:type_name -> NLD_PB.DB_VehicleInfo
	6,  // 5: NLD_PB.DB_Logics.counts:type_name -> NLD_PB.DB_LogicUint
	7,  // 6: NLD_PB.DB_Logics.bytes:type_name -> NLD_PB.DB_LogicByte
	9,  // 7: NLD_PB.DB_Tasks.infos:type_name -> NLD_PB.DB_TaskInfo
	10, // 8: NLD_PB.DB_Tasks.counts:type_name -> NLD_PB.DB_TaskCount
	12, // 9: NLD_PB.DB_Level.infos:type_name -> NLD_PB.DB_LevelInfo
	13, // 10: NLD_PB.DB_Level.groups:type_name -> NLD_PB.DB_GroupInfo
	15, // 11: NLD_PB.DB_Raffle.hcounts:type_name -> NLD_PB.DB_RaffleHitCount
	16, // 12: NLD_PB.DB_Raffle.rcounts:type_name -> NLD_PB.DB_RaffleCount
	18, // 13: NLD_PB.DB_Team.infos:type_name -> NLD_PB.DB_TeamInfo
	20, // 14: NLD_PB.DB_ShopInfo.items:type_name -> NLD_PB.DB_ShopItem
	21, // 15: NLD_PB.DB_Shop.infos:type_name -> NLD_PB.DB_ShopInfo
	23, // 16: NLD_PB.DB_PlayerSkill.skills:type_name -> NLD_PB.DB_SkillLevel
	25, // 17: NLD_PB.DB_Purchase.datas:type_name -> NLD_PB.DB_PurchaseData
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_server_db_proto_init() }
func file_server_db_proto_init() {
	if File_server_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_CharacterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_VehicleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Characters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_PvpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_LogicUint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_LogicByte); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Logics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_TaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_TaskCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Tasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_LevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_RaffleHitCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_RaffleCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Raffle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_TeamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_ShopItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_ShopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Shop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_SkillLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_PlayerSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_PurchaseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_db_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DB_Purchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_db_proto_goTypes,
		DependencyIndexes: file_server_db_proto_depIdxs,
		MessageInfos:      file_server_db_proto_msgTypes,
	}.Build()
	File_server_db_proto = out.File
	file_server_db_proto_rawDesc = nil
	file_server_db_proto_goTypes = nil
	file_server_db_proto_depIdxs = nil
}
