// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: server/manager.proto

package xsf_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GMResult int32

const (
	GMResult_GMOK              GMResult = 0 // OK
	GMResult_GMActorIDError    GMResult = 85
	GMResult_TokenError        GMResult = 86 // Token错误
	GMResult_GetAccountError   GMResult = 87 // 获取账号信息错误
	GMResult_ParamCountError   GMResult = 88 // 参数数量错误
	GMResult_ParamContentError GMResult = 89 // 参数内容错误
	GMResult_GMCommandInvalid  GMResult = 90
	GMResult_JsonMarshalError  GMResult = 91
	GMResult_GMSystemError     GMResult = 1000
	GMResult_ActorOffline      GMResult = 10000 // 角色已离线
	GMResult_AccountNotExist   GMResult = 10001 // 账号不存在
)

// Enum value maps for GMResult.
var (
	GMResult_name = map[int32]string{
		0:     "GMOK",
		85:    "GMActorIDError",
		86:    "TokenError",
		87:    "GetAccountError",
		88:    "ParamCountError",
		89:    "ParamContentError",
		90:    "GMCommandInvalid",
		91:    "JsonMarshalError",
		1000:  "GMSystemError",
		10000: "ActorOffline",
		10001: "AccountNotExist",
	}
	GMResult_value = map[string]int32{
		"GMOK":              0,
		"GMActorIDError":    85,
		"TokenError":        86,
		"GetAccountError":   87,
		"ParamCountError":   88,
		"ParamContentError": 89,
		"GMCommandInvalid":  90,
		"JsonMarshalError":  91,
		"GMSystemError":     1000,
		"ActorOffline":      10000,
		"AccountNotExist":   10001,
	}
)

func (x GMResult) Enum() *GMResult {
	p := new(GMResult)
	*p = x
	return p
}

func (x GMResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMResult) Descriptor() protoreflect.EnumDescriptor {
	return file_server_manager_proto_enumTypes[0].Descriptor()
}

func (GMResult) Type() protoreflect.EnumType {
	return &file_server_manager_proto_enumTypes[0]
}

func (x GMResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMResult.Descriptor instead.
func (GMResult) EnumDescriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{0}
}

// manager --> login GM指令
type Mg_L_GMCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId        uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Account      string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	LocalAccount string `protobuf:"bytes,3,opt,name=local_account,json=localAccount,proto3" json:"local_account,omitempty"`
	Action       string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	QueryJson    string `protobuf:"bytes,5,opt,name=query_json,json=queryJson,proto3" json:"query_json,omitempty"`
}

func (x *Mg_L_GMCommand) Reset() {
	*x = Mg_L_GMCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mg_L_GMCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mg_L_GMCommand) ProtoMessage() {}

func (x *Mg_L_GMCommand) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mg_L_GMCommand.ProtoReflect.Descriptor instead.
func (*Mg_L_GMCommand) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{0}
}

func (x *Mg_L_GMCommand) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

func (x *Mg_L_GMCommand) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Mg_L_GMCommand) GetLocalAccount() string {
	if x != nil {
		return x.LocalAccount
	}
	return ""
}

func (x *Mg_L_GMCommand) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Mg_L_GMCommand) GetQueryJson() string {
	if x != nil {
		return x.QueryJson
	}
	return ""
}

type S_Mg_GMCommandResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId   uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Result  string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *S_Mg_GMCommandResult) Reset() {
	*x = S_Mg_GMCommandResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_Mg_GMCommandResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_Mg_GMCommandResult) ProtoMessage() {}

func (x *S_Mg_GMCommandResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_Mg_GMCommandResult.ProtoReflect.Descriptor instead.
func (*S_Mg_GMCommandResult) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{1}
}

func (x *S_Mg_GMCommandResult) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

func (x *S_Mg_GMCommandResult) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *S_Mg_GMCommandResult) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *S_Mg_GMCommandResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// game --> manager 检查昵称
type G_Mg_CheckNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId  uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *G_Mg_CheckNickname) Reset() {
	*x = G_Mg_CheckNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G_Mg_CheckNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G_Mg_CheckNickname) ProtoMessage() {}

func (x *G_Mg_CheckNickname) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G_Mg_CheckNickname.ProtoReflect.Descriptor instead.
func (*G_Mg_CheckNickname) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{2}
}

func (x *G_Mg_CheckNickname) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *G_Mg_CheckNickname) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

// manager --> game 检查昵称结果
type Mg_G_CheckNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	ActorId  uint32 `protobuf:"varint,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *Mg_G_CheckNickname) Reset() {
	*x = Mg_G_CheckNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mg_G_CheckNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mg_G_CheckNickname) ProtoMessage() {}

func (x *Mg_G_CheckNickname) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mg_G_CheckNickname.ProtoReflect.Descriptor instead.
func (*Mg_G_CheckNickname) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{3}
}

func (x *Mg_G_CheckNickname) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Mg_G_CheckNickname) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *Mg_G_CheckNickname) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

// game --> manager 更新昵称
type G_Mg_NicknameUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId  uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *G_Mg_NicknameUpdate) Reset() {
	*x = G_Mg_NicknameUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G_Mg_NicknameUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G_Mg_NicknameUpdate) ProtoMessage() {}

func (x *G_Mg_NicknameUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G_Mg_NicknameUpdate.ProtoReflect.Descriptor instead.
func (*G_Mg_NicknameUpdate) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{4}
}

func (x *G_Mg_NicknameUpdate) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *G_Mg_NicknameUpdate) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

// game --> manager 新角色
type G_Mg_NewActor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId      uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Nickname     string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AccountId    string `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	LocalAccount string `protobuf:"bytes,4,opt,name=local_account,json=localAccount,proto3" json:"local_account,omitempty"`
	ClientId     uint32 `protobuf:"varint,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *G_Mg_NewActor) Reset() {
	*x = G_Mg_NewActor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G_Mg_NewActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G_Mg_NewActor) ProtoMessage() {}

func (x *G_Mg_NewActor) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G_Mg_NewActor.ProtoReflect.Descriptor instead.
func (*G_Mg_NewActor) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{5}
}

func (x *G_Mg_NewActor) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *G_Mg_NewActor) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *G_Mg_NewActor) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *G_Mg_NewActor) GetLocalAccount() string {
	if x != nil {
		return x.LocalAccount
	}
	return ""
}

func (x *G_Mg_NewActor) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

// game --> manager 设置防守数据
type G_Mg_SetDefenceTeamForPvp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId     uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	DefenceData []byte `protobuf:"bytes,2,opt,name=defence_data,json=defenceData,proto3" json:"defence_data,omitempty"` // MSG_PvpDefenceData
}

func (x *G_Mg_SetDefenceTeamForPvp) Reset() {
	*x = G_Mg_SetDefenceTeamForPvp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G_Mg_SetDefenceTeamForPvp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G_Mg_SetDefenceTeamForPvp) ProtoMessage() {}

func (x *G_Mg_SetDefenceTeamForPvp) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G_Mg_SetDefenceTeamForPvp.ProtoReflect.Descriptor instead.
func (*G_Mg_SetDefenceTeamForPvp) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{6}
}

func (x *G_Mg_SetDefenceTeamForPvp) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *G_Mg_SetDefenceTeamForPvp) GetDefenceData() []byte {
	if x != nil {
		return x.DefenceData
	}
	return nil
}

type MSG_SPvpRival struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId     uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Nickname    string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Socre       uint32 `protobuf:"varint,3,opt,name=socre,proto3" json:"socre,omitempty"`                               // 对手当前积分
	Order       uint32 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`                               // 对手当前排名
	DefenceData []byte `protobuf:"bytes,5,opt,name=defence_data,json=defenceData,proto3" json:"defence_data,omitempty"` // MSG_PvpDefenceData
}

func (x *MSG_SPvpRival) Reset() {
	*x = MSG_SPvpRival{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSG_SPvpRival) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSG_SPvpRival) ProtoMessage() {}

func (x *MSG_SPvpRival) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSG_SPvpRival.ProtoReflect.Descriptor instead.
func (*MSG_SPvpRival) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{7}
}

func (x *MSG_SPvpRival) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *MSG_SPvpRival) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MSG_SPvpRival) GetSocre() uint32 {
	if x != nil {
		return x.Socre
	}
	return 0
}

func (x *MSG_SPvpRival) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *MSG_SPvpRival) GetDefenceData() []byte {
	if x != nil {
		return x.DefenceData
	}
	return nil
}

// manager --> game pvp数据
type Mg_G_PvpInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId uint32           `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Order   uint32           `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Score   uint32           `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Srivals []*MSG_SPvpRival `protobuf:"bytes,4,rep,name=srivals,proto3" json:"srivals,omitempty"`
}

func (x *Mg_G_PvpInformation) Reset() {
	*x = Mg_G_PvpInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mg_G_PvpInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mg_G_PvpInformation) ProtoMessage() {}

func (x *Mg_G_PvpInformation) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mg_G_PvpInformation.ProtoReflect.Descriptor instead.
func (*Mg_G_PvpInformation) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{8}
}

func (x *Mg_G_PvpInformation) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *Mg_G_PvpInformation) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Mg_G_PvpInformation) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Mg_G_PvpInformation) GetSrivals() []*MSG_SPvpRival {
	if x != nil {
		return x.Srivals
	}
	return nil
}

// game --> manager 分数更新
type G_Mg_PvpScoreUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Socre   uint32 `protobuf:"varint,2,opt,name=socre,proto3" json:"socre,omitempty"`
}

func (x *G_Mg_PvpScoreUpdate) Reset() {
	*x = G_Mg_PvpScoreUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G_Mg_PvpScoreUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G_Mg_PvpScoreUpdate) ProtoMessage() {}

func (x *G_Mg_PvpScoreUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G_Mg_PvpScoreUpdate.ProtoReflect.Descriptor instead.
func (*G_Mg_PvpScoreUpdate) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{9}
}

func (x *G_Mg_PvpScoreUpdate) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *G_Mg_PvpScoreUpdate) GetSocre() uint32 {
	if x != nil {
		return x.Socre
	}
	return 0
}

type Mg_G_PvpScoreUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId            uint32 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	DefenceScore       uint32 `protobuf:"varint,2,opt,name=defence_score,json=defenceScore,proto3" json:"defence_score,omitempty"`                     // 防守获得的积分
	DefenceCombatCount uint32 `protobuf:"varint,3,opt,name=defence_combat_count,json=defenceCombatCount,proto3" json:"defence_combat_count,omitempty"` // 防守战次数
	DefenceWinCount    uint32 `protobuf:"varint,4,opt,name=defence_win_count,json=defenceWinCount,proto3" json:"defence_win_count,omitempty"`          // 防守战胜利次数
}

func (x *Mg_G_PvpScoreUpdate) Reset() {
	*x = Mg_G_PvpScoreUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mg_G_PvpScoreUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mg_G_PvpScoreUpdate) ProtoMessage() {}

func (x *Mg_G_PvpScoreUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_server_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mg_G_PvpScoreUpdate.ProtoReflect.Descriptor instead.
func (*Mg_G_PvpScoreUpdate) Descriptor() ([]byte, []int) {
	return file_server_manager_proto_rawDescGZIP(), []int{10}
}

func (x *Mg_G_PvpScoreUpdate) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *Mg_G_PvpScoreUpdate) GetDefenceScore() uint32 {
	if x != nil {
		return x.DefenceScore
	}
	return 0
}

func (x *Mg_G_PvpScoreUpdate) GetDefenceCombatCount() uint32 {
	if x != nil {
		return x.DefenceCombatCount
	}
	return 0
}

func (x *Mg_G_PvpScoreUpdate) GetDefenceWinCount() uint32 {
	if x != nil {
		return x.DefenceWinCount
	}
	return 0
}

var File_server_manager_proto protoreflect.FileDescriptor

var file_server_manager_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x22, 0x9d,
	0x01, 0x0a, 0x0e, 0x4d, 0x67, 0x5f, 0x4c, 0x5f, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x73,
	0x0a, 0x14, 0x53, 0x5f, 0x4d, 0x67, 0x5f, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x12, 0x47, 0x5f, 0x4d, 0x67, 0x5f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x63, 0x0a, 0x12, 0x4d, 0x67, 0x5f, 0x47, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x13, 0x47, 0x5f, 0x4d, 0x67, 0x5f, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x47, 0x5f, 0x4d, 0x67, 0x5f, 0x4e, 0x65, 0x77,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x59, 0x0a,
	0x19, 0x47, 0x5f, 0x4d, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x50, 0x76, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x0d, 0x4d, 0x53, 0x47,
	0x5f, 0x53, 0x50, 0x76, 0x70, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x63, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x6f, 0x63, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x8d, 0x01, 0x0a, 0x13, 0x4d, 0x67, 0x5f, 0x47, 0x5f, 0x50, 0x76, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x2f, 0x0a, 0x07, 0x73, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x4e, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x2e, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x50,
	0x76, 0x70, 0x52, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x07, 0x73, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x73,
	0x22, 0x46, 0x0a, 0x13, 0x47, 0x5f, 0x4d, 0x67, 0x5f, 0x50, 0x76, 0x70, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x63, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x6f, 0x63, 0x72, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x4d, 0x67, 0x5f,
	0x47, 0x5f, 0x50, 0x76, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x77, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64,
	0x65, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0xe2,
	0x01, 0x0a, 0x08, 0x47, 0x4d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x4d, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x4d, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x55, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x56, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x57, 0x12, 0x13,
	0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x58, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x59, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x4d,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x5a,
	0x12, 0x14, 0x0a, 0x10, 0x4a, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x5b, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x4d, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xe8, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x90, 0x4e, 0x12, 0x14, 0x0a,
	0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x10, 0x91, 0x4e, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x62, 0x2f, 0x78, 0x73, 0x66, 0x5f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_manager_proto_rawDescOnce sync.Once
	file_server_manager_proto_rawDescData = file_server_manager_proto_rawDesc
)

func file_server_manager_proto_rawDescGZIP() []byte {
	file_server_manager_proto_rawDescOnce.Do(func() {
		file_server_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_manager_proto_rawDescData)
	})
	return file_server_manager_proto_rawDescData
}

var file_server_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_server_manager_proto_goTypes = []interface{}{
	(GMResult)(0),                     // 0: NLD_PB.GMResult
	(*Mg_L_GMCommand)(nil),            // 1: NLD_PB.Mg_L_GMCommand
	(*S_Mg_GMCommandResult)(nil),      // 2: NLD_PB.S_Mg_GMCommandResult
	(*G_Mg_CheckNickname)(nil),        // 3: NLD_PB.G_Mg_CheckNickname
	(*Mg_G_CheckNickname)(nil),        // 4: NLD_PB.Mg_G_CheckNickname
	(*G_Mg_NicknameUpdate)(nil),       // 5: NLD_PB.G_Mg_NicknameUpdate
	(*G_Mg_NewActor)(nil),             // 6: NLD_PB.G_Mg_NewActor
	(*G_Mg_SetDefenceTeamForPvp)(nil), // 7: NLD_PB.G_Mg_SetDefenceTeamForPvp
	(*MSG_SPvpRival)(nil),             // 8: NLD_PB.MSG_SPvpRival
	(*Mg_G_PvpInformation)(nil),       // 9: NLD_PB.Mg_G_PvpInformation
	(*G_Mg_PvpScoreUpdate)(nil),       // 10: NLD_PB.G_Mg_PvpScoreUpdate
	(*Mg_G_PvpScoreUpdate)(nil),       // 11: NLD_PB.Mg_G_PvpScoreUpdate
}
var file_server_manager_proto_depIdxs = []int32{
	8, // 0: NLD_PB.Mg_G_PvpInformation.srivals:type_name -> NLD_PB.MSG_SPvpRival
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_server_manager_proto_init() }
func file_server_manager_proto_init() {
	if File_server_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mg_L_GMCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_Mg_GMCommandResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G_Mg_CheckNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mg_G_CheckNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G_Mg_NicknameUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G_Mg_NewActor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G_Mg_SetDefenceTeamForPvp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSG_SPvpRival); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mg_G_PvpInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G_Mg_PvpScoreUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mg_G_PvpScoreUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_manager_proto_goTypes,
		DependencyIndexes: file_server_manager_proto_depIdxs,
		EnumInfos:         file_server_manager_proto_enumTypes,
		MessageInfos:      file_server_manager_proto_msgTypes,
	}.Build()
	File_server_manager_proto = out.File
	file_server_manager_proto_rawDesc = nil
	file_server_manager_proto_goTypes = nil
	file_server_manager_proto_depIdxs = nil
}
